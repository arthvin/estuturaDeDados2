#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct {
    char nome[50];
    float preco;
    int quantidade;
} Produto;

typedef struct Node {
    Produto produto;
    struct Node* next;
} Node;

typedef struct {
    Node* head;
} Estoque;

Node* criarNo(Produto produto) {
    Node* novoNo = (Node*)malloc(sizeof(Node));
    if (novoNo != NULL) {
        novoNo->produto = produto;
        novoNo->next = NULL;
    }
    return novoNo;
}

// Função para inicializar o estoque
Estoque* inicializarEstoque() {
    Estoque* estoque = (Estoque*)malloc(sizeof(Estoque));
    if (estoque != NULL) {
        estoque->head = NULL;
    }
    return estoque;
}

// Função para adicionar um produto ao estoque
void adicionarProduto(Estoque* estoque, Produto produto) {
    Node* novoNo = criarNo(produto);
    if (novoNo != NULL) {
        novoNo->next = estoque->head;
        estoque->head = novoNo;
    } else {
        printf("Erro ao adicionar o produto ao estoque. Memória insuficiente.\n");
    }
}

// Função para remover um produto do estoque
void removerProduto(Estoque* estoque, const char* nomeProduto) {
    Node* atual = estoque->head;
    Node* anterior = NULL;
    while (atual != NULL) {
        if (strcmp(atual->produto.nome, nomeProduto) == 0) {
            if (anterior == NULL) {
                estoque->head = atual->next;
            } else {
                anterior->next = atual->next;
            }
            free(atual);
            printf("%s removido do estoque.\n", nomeProduto);
            return;
        }
        anterior = atual;
        atual = atual->next;
    }
    printf("%s não encontrado no estoque.\n", nomeProduto);
}

// Função para buscar um produto no estoque
Produto* buscarProduto(Estoque* estoque, const char* nomeProduto) {
    Node* atual = estoque->head;
    while (atual != NULL) {
        if (strcmp(atual->produto.nome, nomeProduto) == 0) {
            return &atual->produto;
        }
        atual = atual->next;
    }
    return NULL;
}

// Função para imprimir todos os produtos no estoque
void listarProdutos(Estoque* estoque) {
    Node* atual = estoque->head;
    if (atual == NULL) {
        printf("O estoque está vazio.\n");
    } else {
        printf("Produtos no estoque:\n");
        while (atual != NULL) {
            printf("%s - R$%.2f - %d unidades\n", atual->produto.nome, atual->produto.preco, atual->produto.quantidade);
            atual = atual->next;
        }
    }
}

int main() {
    Estoque* estoque = inicializarEstoque();

    int opcao;
    char nomeProduto[50];

    do {
        printf("\n========== ESTOQUE ==========\n");
        printf("1. Adicionar Produto\n");
        printf("2. Remover Produto\n");
        printf("3. Buscar Produto\n");
        printf("4. Listar Produtos\n");
        printf("0. Sair\n");
        printf("Escolha uma opção: ");
        scanf("%d", &opcao);

        switch (opcao) {
            case 1: // Adicionar Produto
                {
                    Produto novoProduto;
                    printf("Nome do produto: ");
                    scanf("%s", novoProduto.nome);
                    printf("Preço do produto: ");
                    scanf("%f", &novoProduto.preco);
                    printf("Quantidade do produto: ");
                    scanf("%d", &novoProduto.quantidade);
                    adicionarProduto(estoque, novoProduto);
                    printf("Produto adicionado com sucesso.\n");
                    break;
                }
            case 2: // Remover Produto
                {
                    printf("Nome do produto a ser removido: ");
                    scanf("%s", nomeProduto);
                    removerProduto(estoque, nomeProduto);
                    break;
                }
            case 3: // Buscar Produto
                {
                    printf("Nome do produto a ser buscado: ");
                    scanf("%s", nomeProduto);
                    Produto* produtoBuscado = buscarProduto(estoque, nomeProduto);
                    if (produtoBuscado != NULL) {
                        printf("Produto encontrado: %s - R$%.2f - %d unidades\n", produtoBuscado->nome, produtoBuscado->preco, produtoBuscado->quantidade);
                    } else {
                        printf("Produto não encontrado.\n");
                    }
                    break;
                }
            case 4: // Listar Produtos
                listarProdutos(estoque);
                break;
            case 0: // Sair
                printf("Saindo do programa...\n");
                break;
            default:
                printf("Opção inválida. Tente novamente.\n");
        }
    } while (opcao != 0);
    
    return 0;
}


